/* Note: text between pairs of /* will disappear when you save your workskin.
 * It's just there to provide explanation. */
#workskin {
  position: relative;
}

/* The body of the phone */
#workskin .phone {
  width: 300px;
  max-width: 95%;
  position: relative;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 1em auto;
  border: 2px ridge #aaa;
  /* top, right, bottom, left */
  padding: 0 .5em 1em .5em;
  display: table;
  overflow-wrap: anywhere;
  box-sizing: border-box;
}

/* Group chat or contact name */
#workskin .phoneheader {
  border-bottom: 2px ridge #b2b2b2;
  font-weight: bold;
  padding: 0.5em;
  /* top/bottom left/right */
  margin: 0 -0.5em;
  text-align: center;
  display: block;
  overflow-wrap: anywhere;
  /* Respecify font since headers may specify different font */
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

/* Chat bubbles (text on left, breply on right) */
#workskin .text,
#workskin .breply {
  /* top, right, bottom, left */
  margin: 0 0 .5em 0;
  border-radius: 1em;
  padding: 0.5em 1em;
  max-width: 75%;
  clear: both;
  position: relative;
  overflow-wrap: anywhere;
}

#workskin .text {
  float: left;
  border-bottom-left-radius: 0.1em;
  border-top-left-radius: 0.1em;
  outline: 2px ridge #c5c5ca;
  margin-right: 1em;
}

#workskin .breply {
  float: right;
  border-bottom-right-radius: 0.1em;
  border-top-right-radius: 0.1em;
  outline: 2px ridge #1289fe;
  margin-left: 1em;
}

/* Note: ao3's css parser gets a little confused by the commas in the :is() selector,
 * but it should still work! */
#workskin .new.breply,
#workskin :is(.text, .phoneheader, .time) + .breply,
#workskin :is(.text, .phoneheader, .time) + .hiddeninfo + .breply,
/* Special comment format that ao3 won't strip (note: comment must not contain commas)*/
#workskin bogus[comment="ao3's css parser gets a little confused by the :is() selector but though the result looks different it should still work"] {
  margin-top: 1em;
  border-top-right-radius: 1em;
}

#workskin .new.text,
#workskin :is(.breply, .phoneheader, .time) + .text,
#workskin :is(.breply, .phoneheader, .time) + .hiddeninfo + .text,
#workskin .grouptext + .text {
  margin-top: 1em;
  border-top-left-radius: 1em;
}

/* Contact names in group chats, and timestamps */
#workskin .time,
#workskin .grouptext {
  font-size: 0.75em;
  margin: 1em;
  padding: 0;
  display: block;
  clear: both;
}

#workskin .time {
  text-align: center;
  /* Use padding instead of margin to adjust spacing to previous element,
   * because floats don't play well with margins. */
  margin-top: 0;
  padding-top: 1em;
  margin-bottom: 0;
}

#workskin .grouptext {
  float: left;
  margin-bottom: -1.1em;
  margin-left: .5em;
}

#workskin .grouptext + br,
#workskin .grouptext + * > br:only-child,
#workskin .hiddeninfo + br,
#workskin .hiddeninfo + * > br:only-child {
  display: none;
}

#workskin .grouptext > strong {
  font-weight: normal;
}

/* Use to visually check on hiddeninfo */
#workskin .xhiddeninfo {
  outline: 1px ridge #ff0000;
  clear: both;
  text-align: center;
}

/* Hide text visually, but not from screen readers. */
/* This is copied from here: https://github.com/angular/components/blob/main/src/cdk/a11y/_index.scss#L4C3-L35C4 */
#workskin .hiddeninfo {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  /* This works around a Chrome bug that can cause the tab to crash when large amounts of
   * non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444 */
  white-space: nowrap;

  /* Avoid browsers rendering the focus ring in some cases. */
  outline: 0;

  /* Avoid some cases where the browser will still render the native controls (see #9049). */
  -webkit-appearance: none;
  -moz-appearance: none;

  /* We need at least one of top/bottom/left/right in order to prevent cases where the
   * absolute-positioned element is pushed down and can affect scrolling (see #24597).
   * `left` was chosen here, because it's the least likely to break overrides where the
   * element might have been positioned (e.g. `mat-checkbox`). */
  left: 0;
}
